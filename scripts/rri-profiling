#!/bin/bash

#   RRI - Relevant Routine Identifier
#   Copyright (C) 2016  Damien Dosimont
#
#   This file is part of RRI.
#
#   RRI is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

basedir=$(dirname $0)
rscript=$basedir/rri-profiling.R
width=0
height=0
dpi=300
func=0

clean="false"

usage_fct(){
  echo "Usage : $0 [options] <rri-directory>"
  echo "Options:"
  echo "-h --help: Print help"
  echo "-c --clean: Remove all the generated files"
# echo "-s --size [w] [h]: Set pdf outputs width and height in inch (default: $width $height)"
  echo "-d --dpi [n]: Set pdf outputs dpi (default: $dpi)"
  echo "-f --functions [n]: Limit the number of printed functions in the pdf files to the n functions with the longest duration"
  exit 2
}

if [ -f "rri-profiling.R" ]
then
  rscript=rri-profiling.R
elif [[ ! -f "$rscript" ]]
then
  if [[ -f "${RRI_PATH}/rri-profiling.R" ]]
  then
    rscript=${RRI_PATH}/rri-profiling.R
  else
    echo "The required R script rri-profiling.R has not been found. Set the environment variable RRI_PATH to the directory that contains it. Leaving..."
    exit 1
  fi
fi

#No arguments
if [ $# -eq 0 ]
then
  usage_fct
fi
#Test arguments
while [ $# -gt 1 ]
do
  if [ $1 = "-h" ] || [ $1 = "--help" ]
  then
    usage_fct
    exit 0
  elif [ $1 = "-c" ] || [ $1 = "--clean" ]
  then
    clean="true"
  elif [ $1 = "-s" ] || [ $1 = "--size" ]
  then
    shift
    width=$1
    shift
    height=$1
  elif [ $1 = "-d" ] || [ $1 = "--dpi" ]
  then
    shift
    dpi=$1
  elif [ $1 = "-f" ] || [ $1 = "--functions" ]
  then
    shift
    func=$1
  fi
  shift
done
if [ ! -d $1 ]
then
  echo "$1 is not a valid directory"
  usage_fct
  exit 1
fi
input_dir=$1
input_dir_basename=`basename $input_dir`
output_dir=$input_dir/$input_dir_basename.profiling
if [ $clean = "true" ]
then
  echo "Cleaning $output_dir directory"
  rm -fr  $output_dir
else
  mkdir -p $output_dir
  input_file=$input_dir/*rri.profiling.csv
  for counter in `awk -vFPAT="([^;]+)|(\"[^\"]+\")" '{print $2}' $input_file | sort | uniq`
  do
    sed -n "/$counter/p" $input_file > $output_dir/${counter}_temp
    sort -r -g -t";" -k4 $output_dir/${counter}_temp > $output_dir/$counter
    rm $output_dir/${counter}_temp 
  done
  R --slave --vanilla --args $input_dir $output_dir $func $width $height $dpi < $rscript
  echo "---------------------------------------------------"
  echo "Profiling files:"
  for counter in `awk -vFPAT="([^;]+)|(\"[^\"]+\")" '{print $2}' $input_file | sort | uniq`
  do
  echo "$counter: $output_dir/$counter.pdf"
  done
  echo "---------------------------------------------------"
fi
